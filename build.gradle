buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.9.0'
    id 'com.jfrog.bintray' version '1.1'
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.marketcetera.fork:commons-csv:2.4.2'
    compile 'org.apache.poi:ooxml-schemas:1.1'
    compile 'org.apache.poi:poi-ooxml:3.12'
    compile 'org.apache.poi:poi:3.12'
    compile 'org.jsoup:jsoup:1.8.2'
    testCompile 'junit:junit:4.12'
}

group = GROUP
version = VERSION_NAME

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
    }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
}
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }

            pom.groupId = GROUP
            pom.artifactId = POM_ARTIFACT_ID
            pom.version = VERSION_NAME

            pom.project {
                name POM_NAME
                packaging POM_PACKAGING
                description POM_DESCRIPTION
                url POM_URL

                scm {
                    url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}

task javadocsJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives javadocsJar
}

bintray {
    user = POM_DEVELOPER_ID
    key = BINTRAY_API_KEY
    pkg {
        repo = 'maven'
        name = POM_ARTIFACT_ID
    }
}

pluginBundle {
    website = POM_URL
    vcsUrl = POM_SCM_URL
    description = POM_DESCRIPTION
    tags = ['localization', 'android']

    plugins {
        localizationPlugin {
            id = 'pl.droidsonroids.localization'
            displayName = 'Android gradle localization plugin'
            description = 'Gradle plugin for generating localized Android resources'
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

jacoco {
    toolVersion = '0.7.4.201502262128'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}